{{ lang_switch }}

## {{ name }}
### *Email:* {{ email }}
### {{ location }}
{{ subtitle }}

**{{ subsubtitle }}**

### {{ professional_exp_title }}
{%- for exp in professional_exp %}

#### **{{ exp.company }},** {{ exp.location }} — *{{ exp.title }}*
##### {{ exp.time_range }}
{{ exp.description }}
{%- endfor %}

### {{ education_title }}
{%- for edu in education %}

#### **{{ edu.institution }},** {{ edu.location }} — *{{ edu.degree }}*
##### {{ edu.time_range }}
{{ edu.description }}
{%- endfor %}

### {{ skills_title }}
{%- for skill in skills %}

{{ skill.title }}{% if skill.list is defined %}:{% else %}.{% endif %}
{%- for item in skill.list %}
- {% if item.sublist is not defined %}{{ item }}{% else %}{{ item.title }}{% if item.list is not defined %}:{% else %}.{% endif %}
{%- for subitem in item.sublist %}
  - {% if subitem.subsublist is not defined %}{{ subitem }}{% else %}{{ subitem.title }}:
{%- for subsubitem in subitem.subsublist %}
    - {{ subsubitem }}
{%- endfor %}
{%- endif %}
{%- endfor %}
{%- endif %}
{%- endfor %}
{%- endfor %}

### {{ human_lang_title }}
{% for lang in human_lang %}{% if not loop.first %}, {% endif %}{{ lang.lang }} ({{ lang.level }}){% endfor %}

### {{ projects_title }}
{%- for project in projects %}
#### **{{ project.name }}** - *{{ project.summary }}*
{{ project.description }}
{%- if project.code is defined and (project.code.gitlab is defined or project.code.github is defined) -%}
Code at: {% if project.code.gitlab is defined %}[GitLab](https://gitlab.com/{{ project.code.gitlab }}){% endif %}{% if project.code.gitlab is defined and project.code.github is defined %} {% endif %}{% if project.code.github is defined %}[GitHub](https://github.com/{{ project.code.github }}){% endif %}
{%- endif %}

{% endfor %}

#### **Docker SSH** — *Lightweight containers for testing deployments*
At the moment, only a Debian based Docker image that runs sshd with supervisord, for initial testing with Ansible or other orchestration frameworks. Code at: [GitLab](https://gitlab.com/nishedcob/docker-ssh) [GitHub](https://github.com/nishedcob/docker-ssh)

#### **GitEDU** — *Online IDE Service*
Service with the purpose of allowing universities to be able to offer students a low cost, open source Linux-based extensible IDE online. This is my engineering thesis along with some other services that add functionality as listed below. Currently Python 3, Shell Script and PostgreSQL are supported languages for execution in the Kubernetes/Docker backend (see EduNube project). Classic Username/Password in addition to LTI authentication (for direct integration with most LMS like Moodle, OpenEdX, etc) is supported. Front end uses Cloud9’s open source ACE editor and Twitter Bootstrap. Written in Python with the Django Framework. Code at: [GitLab](https://gitlab.com/nishedcob/GitEDU) [GitHub](https://github.com/nishedcob/GitEDU) (see GitEDU directory and gitedu branch, activate-ge.sh for VirtualEnv creation/pip install and activation)

#### **EduNube** — *Code Execution Service*
Service for receiving HTTP requests and executing the code in a secure virtualized environment (currently a Virtualized Kubernetes Cluster with Docker)  as part of the functionality offered in GitEDU service in my engineering thesis. JSON Web Tokens are used for API authentication. Written in Python with the Django Framework with a Shell Script Backend. Code at: [GitLab](https://gitlab.com/nishedcob/GitEDU) [GitHub](https://github.com/nishedcob/GitEDU) (see EduNube, Docker and Kubernetes directories and edunube branch, activate-en.sh for VirtualEnv creation/pip install and activation)

#### **GitServerHTTPEndpoint** — *Convert HTTP requests into Git Objects, for use with GitWeb*
Service for receiving HTTP requests and converting them into their respective objects in locally hosted Git repositories as part of the functionality offered in GitEDU service in my engineering thesis. JSON Web Tokens are used for API authentication. Written in Python with the Django Framework with a Shell Script Backend. Code at: [GitLab](https://gitlab.com/nishedcob/GitServerHTTPEndpoint) [GitHub](https://github.com/nishedcob/GitServerHTTPEndpoint) (VirtualEnv/Dependency Management with PipEnv)

#### **postgresql-code-executor-template** — *Execute Shell Script and PostgreSQL statements in a Docker Container*
Template for executing shell script and PostgreSQL statements within a Docker container using EduNube service as part of the functionality of my engineering thesis. Includes the possibility for database initialization (in the use case of a database professor) before the execution of the end user’s SQL statements. Written completely in Shell Script with Sample SQL Code. Code at: [GitLab](https://gitlab.com/nishedcob/postgresql-code-executor-template) [GitHub](https://github.com/nishedcob/postgresql-code-executor-template)

#### **python3-code-executor-template** — *Execute Shell Script and Python 3.x in a Docker Container*
Template for executing shell script and Python 3 within a Docker container using EduNube service as part of the functionality of my engineering thesis. Includes Virtualenv and Pip 3 Integration for installation of dependencies defined by the end user. Written completely in Shell Script with Sample Python 3 Code. Code at: [GitLab](https://gitlab.com/nishedcob/python3-code-executor-template) [GitHub](https://github.com/nishedcob/python3-code-executor-template)

#### **shell-code-executor-template** — *Execute Shell Script in a Docker Container*
Base template for executing shell script within a Docker container using EduNube service as part of the functionality of my engineering thesis. Written completely in Shell Script. Code at: [GitLab](https://gitlab.com/nishedcob/shell-code-executor-template) [GitHub](https://github.com/nishedcob/shell-code-executor-template)

#### **SBC-Climate-App** — *Present Climate Data as a Web Application*
Present Climate Change data, collected in a semantic graph (RDF/N-Triplets) in easier ways for the average person to understand. Written in Python with the Django Framework. Code at: [GitHub](https://github.com/nishedcob/SBC-Climate-App) [GitLab](https://gitlab.com/nishedcob/SBC-Climate-App)

#### **SBC-Data-Translator** — *Convert Climate Data from CSVs to RDF/N-Triplets Semantic Graph for easier consumption*
Convert Climate Change data in CSV,  to a semantic graph (RDF/N-Triplets) for use with **_SBC-Climate-App_** and Virtuoso OpenSource. Written in Java as a Maven Project with Apache Jena as a dependency. Code at: [GitLab](https://gitlab.com/nishedcob/SBC-Data-Translator)

#### **GitLogSync** — *Synchronize Logs from servers to external backup*
Custom mini framework that uses Cron Jobs and a Git backend to take periodic snapshots of critical logs and sync them to an external private remote Git repository to automate the process for MUBER and GOODAPPETIT and in doing so provide authorized members of the development and QA teams direct access to the logs for the production and testing environments. Written in Shell Script.

#### **py3-csv2nt** — *Convert CSV files in table form into N-Triplets*
Based on a definition of how the data is structure in the table (what are the respective columns), Triplets are generated that can then be converted into RDF and graphs via 3rd party tools. Written in Python. Code at: [GitHub](https://github.com/nishedcob/py3-csv2nt) [GitLab](https://gitlab.com/nishedcob/py3-csv2nt)

#### **Muber** — *Bicycle Rental Portal*
Portal for managing an electric bicycle rental business online. **The project is now defunct due to poor management/administration of contract by the client.**

#### **GitEduERP** — *Prototype Online IDE*
Prototype/Proof of Concept for editing code online and saving it to GitLab CE as code snippets. Formed the inspiration for my engineering thesis. Front end uses Cloud9’s open source ACE editor and Twitter Bootstrap. Backend Written in Python with the Django Framework. Code at: [GitLab](https://gitlab.com/ArqAppGrpBravoEarleyVargas/GitEduERP)

#### **GoodAppetit** — *Point of Sale for Food Online*
Portal for selling food online from various restaurants and associated delivery to clients. Written in Python / Django. See: [Production Environment](https://goodappetit.com/)

#### **NUX-BIN** — *Shell Wrapper Scripts for Personal Administration Idioms*
Shell Wrapper Scripts for compression (XZ/TAR), combine DD with PV, use of SU instead of SUDO for Personal Systems Administration, etc. Written in Shell Script. Code at: [GitHub](https://github.com/nishedcob/nux-utils) [GitLab](https://gitlab.com/nishedcob/nux-utils)

#### **Docker Compose for SugarCRM Container** — *Fork to add greater usability*
Update to SugarCRM v6.5.23 and add persistence. Code at: [GitHub](https://github.com/nishedcob/docker-sugarcrm) [GitLab](https://gitlab.com/nishedcob/docker-sugarcrm)

#### **LoxaCorp Linux** — *Project Management Simulation*
Simulated Project Management aspect though planning stages of the construction of a commercial enterprise Linux. Also built prototype Hybrid ISOs based on Debian GNU/Linux using Live Build System. Code for construction with Live Build System at: [GitLab](https://gitlab.com/nishedcob/LoxaCorpSOsDebian) [GitHub](https://github.com/nishedcob/LoxaCorpSOsDebian)

#### **Number Recognition/Parsing** — *OpenCV and Python*
Worked on Recognition and Parsing of Numbers in Images using Python and OpenCV. Code at: [GitHub](https://github.com/VAUTPL/Number_Detection)

#### **Car/Lane Detection** — *OpenCV and Python Master’s Thesis*
Worked on Detection of Cars and Lanes using Python and OpenCV for a Professor’s Master’s Thesis. Code at: [GitHub](https://github.com/VAUTPL/Detection_of_cars_and_lines)

#### **DJLC16** — *ISA and Virtual Machine (Processor)/Emulator*
16 bit Instruction Set Architecture and accompanying virtual processor for emulation of Instruction Set. Written in C. Code at: [GitHub](https://github.com/nishedcob/DLCJ16) [GitLab](https://gitlab.com/nishedcob/DLCJ16)

#### **DataEnCrypto** — *Cryptography Desktop Application*
Desktop application written in Java to explore Classic Ciphers and their implementation. Code at: [GitHub](https://github.com/nishedcob/DataEnCrypto) [GitLab](https://gitlab.com/nishedcob/DataEnCrypto)
